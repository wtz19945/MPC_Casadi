clear 
clc 

import casadi.*

for n = 0:2
    step_index = n;
    Casadi_Avoidance_QP_LeftStart(step_index)
    Casadi_Avoidance_QP_RightStart(step_index)
end

% Note: This part can be 
disp('generating mex code')
tic
mex LeftStartQP_Step0.cpp -largeArrayDims %
mex LeftStartQP_Step1.cpp -largeArrayDims %
mex LeftStartQP_Step2.cpp -largeArrayDims %
mex RightStartQP_Step0.cpp -largeArrayDims %
mex RightStartQP_Step1.cpp -largeArrayDims %
mex RightStartQP_Step2.cpp -largeArrayDims %
toc

disp('mpc code generation done')

movefile('LeftStartQP_Step0.cpp','Generated_Function/LeftStartQP_Step0.cpp')
movefile('LeftStartQP_Step1.cpp','Generated_Function/LeftStartQP_Step1.cpp')
movefile('LeftStartQP_Step2.cpp','Generated_Function/LeftStartQP_Step2.cpp')
movefile('RightStartQP_Step0.cpp','Generated_Function/RightStartQP_Step0.cpp')
movefile('RightStartQP_Step1.cpp','Generated_Function/RightStartQP_Step1.cpp')
movefile('RightStartQP_Step2.cpp','Generated_Function/RightStartQP_Step2.cpp')

movefile('LeftStartQP_Step0.h','Generated_Function/LeftStartQP_Step0.h')
movefile('LeftStartQP_Step1.h','Generated_Function/LeftStartQP_Step1.h')
movefile('LeftStartQP_Step2.h','Generated_Function/LeftStartQP_Step2.h')
movefile('RightStartQP_Step0.h','Generated_Function/RightStartQP_Step0.h')
movefile('RightStartQP_Step1.h','Generated_Function/RightStartQP_Step1.h')
movefile('RightStartQP_Step2.h','Generated_Function/RightStartQP_Step2.h')
